package com.github.eloyzone.onlineexamination.domain;

import org.springframework.security.core.userdetails.UserDetails;

import javax.persistence.*;
import javax.validation.constraints.NotEmpty;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * @author Eloy 'Elyas' Hadizadeh Tasbiti
 * Created in 11/17/20, 7:44 PM.
 */

@Entity
@Table(name = "users")
public class User
{
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @OneToMany(cascade = CascadeType.ALL, mappedBy = "user", fetch = FetchType.EAGER)
    private List<Authority> authorities = new ArrayList<>();

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "user")
    private List<Book> books = new ArrayList<>();


    @NotEmpty(message = "{username.cannot.be.empty}")
    @Column(unique = true)
    private String username;

    @NotEmpty(message = "{password.cannot.be.empty}")
    private String password;

    @NotEmpty(message = "{name.cannot.be.empty}")
    private String name;

    private LocalDate startingRoundLocalDate;

    public User()
    {
    }


    public User(String username, String password, String name, List<Authority> authorities)
    {
        this.username = username;
        this.password = password;
        this.name = name;

        if (authorities == null) this.authorities = new ArrayList<>();
        else this.authorities = authorities;
    }

    /**
     * This constructor only will be used by UserDetails class and just for authentication purposes
     *
     * @param id          Although it should be generated by databases, CustomUserDetails needs to have it due to
     *                    AuthenticationPrincipal User user arguments in some methods
     * @param username
     * @param password
     * @param name
     * @param authorities
     */
    public User(Long id, String username, String password, String name, List<Authority> authorities, LocalDate startingRoundLocalDate)
    {
        this.id = id;
        this.username = username;
        this.password = password;
        this.name = name;
        this.startingRoundLocalDate = startingRoundLocalDate;

        if (authorities == null) this.authorities = new ArrayList<>();
        else this.authorities = authorities;
    }

    public Long getId()
    {
        return id;
    }

    public void setId(Long id)
    {
        this.id = id;
    }

    public String getUsername()
    {
        return username;
    }

    public void setUsername(String username)
    {
        this.username = username;
    }

    public String getPassword()
    {
        return password;
    }

    public void setPassword(String password)
    {
        this.password = password;
    }

    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public List<Authority> getAuthorities()
    {
        return authorities;
    }

    public void setAuthorities(List<Authority> authorities)
    {
        this.authorities = authorities;
    }

    public List<Book> getBooks()
    {
        return books;
    }

    public void setBooks(List<Book> books)
    {
        this.books = books;
    }

    public LocalDate getStartingRoundLocalDate()
    {
        return startingRoundLocalDate;
    }

    public void setStartingRoundLocalDate(LocalDate startingRoundLocalDate)
    {
        this.startingRoundLocalDate = startingRoundLocalDate;
    }
}
